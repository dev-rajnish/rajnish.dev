const fetch = (await import('node-fetch')).default;
const YOUR_SPREADSHEET_ID = '1dWUL3W7p5Wff_cvXQwd-hD3-kP4A2Y4glcK72XoIkfo';
const YOUR_API_KEY = 'AIzaSyCXmMCqNqYHkE7ttfsktdAUdKAgWnNVo6E'; // Use your actual API Key here

export default async function handler(req, res) {
  const { c: shortcode, u: url } = req.query; // Get shortcode and URL from the query parameters

  try {
    // Fetch existing values from Google Sheets using the API URI method
    const response = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${YOUR_SPREADSHEET_ID}/values/url!A:B?key=${YOUR_API_KEY}`);

    if (!response.ok) {
      throw new Error('Network response was not ok');
    }

    const data = await response.json();
    const rows = data.values || [];

    // Check if the shortcode already exists
    const foundRow = rows?.find(row => row[0] === shortcode);

    if (foundRow) {
      const originalUrl = foundRow[1]; // Get the URL from the second column
      return res.redirect(originalUrl); // Redirect to the original URL
    } else if (shortcode && url) {
      // If the shortcode doesn't exist, and both shortcode and URL are provided, create a new entry

      const appendResponse = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${YOUR_SPREADSHEET_ID}/values/url!A:B:append?valueInputOption=USER_ENTERED&key=${YOUR_API_KEY}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          values: [[shortcode, url]]
        })
      });

      if (!appendResponse.ok) {
        throw new Error('Failed to append new shortcode and URL');
      }

      // Instead of redirecting immediately, send a success response
      return res.json({ message: 'Shortcode created successfully', shortcode, url });
    } else {
      // If shortcode is not found and no URL is provided, redirect to the root (home)
      return res.redirect('/');
    }
  } catch (error) {
    console.error('Error accessing Google Sheets:', error);
    return res.status(500).json({ error: 'Internal Server Error' });
  }
}
